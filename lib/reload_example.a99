* FinalGROM 99 reload example code

       ; your main program here
       ; ...

reloc_addr:
       equ  >XXXX             ; any address in scratchpad or expansion RAM
start_addr:
       equ  >XXXX             ; start address of loaded image

       ; load and run a different program
       li   r0, reloc_addr
       li   r1, trampoline
       li   r2, trampoline_end - trampoline
!      mov  *r1+, *r0+
       dect r2
       jne  -!

       b    @reload

       even
trampoline:
       xorg reloc_addr

       ; send filename to FinalGROM
reload:
       li   r0, reload_seq    ; this is the only non-relocatable instruction
       li   r2, 20            ; sequence length: prefix (8) + sender (12)
send:
       clr  @>6000            ; signal new byte
       li   r1, >0038         ; >7000 >> 9
       movb *r0+, r1
       src  r1, 7             ; >7000 + (byte << 1)
       clr  *r1               ; send byte
;      mov  *r1, r3           ; in RAM mode, use these lines instead
;      mov  r3, *r1           ; to send a byte

       dec  r2
       jne  send

       clr  @>6000            ; done

       ; wait for image to be loaded
       src  r0, 8             ; burn at least 21 cycles
wait:
       li   r0, >6000         ; check >6000->6200
       li   r2, >100
!      mov  *r0+, r1
       jne  done
       dec  r2
       jne  -!
       jmp  wait

       ; image has been loaded
done:
       b    @start_addr

reload_seq:
       ; send this to reload
       text >99, 'OKFG99', >99
       text 'NEWPRG', >0000   ; file to load (8 chars, pad with \00)
       data >ffff             ; >0000 for GROM/mixed, >FFFF for ROM
       data start_addr

       ; NOTE: You must use shortened 8.3 upper-case filenames here.
       ;       For example, to reload "mylongfile.bin", use "MYLONG~1.BIN".
       ;       If there are multiple files with prefix "MYLONG" in the
       ;       folder, you may have to replace the suffix "~1" by "~2",
       ;       "~3", ... to select the correct file.

trampoline_end:
       aorg

       ; continue your program here
       ; ...

       end
